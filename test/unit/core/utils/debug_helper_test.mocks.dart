// Mocks generated by Mockito 5.4.6 from annotations
// in chat_app/test/unit/core/utils/debug_helper_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:chat_app/core/storage/storage_service.dart' as _i3;
import 'package:chat_app/features/settings/data/settings_repository.dart'
    as _i5;
import 'package:chat_app/features/settings/domain/api_config.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiConfig_0 extends _i1.SmartFake implements _i2.ApiConfig {
  _FakeApiConfig_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppSettings_1 extends _i1.SmartFake implements _i2.AppSettings {
  _FakeAppSettings_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i3.StorageService {
  MockStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> saveConversation(String? id, Map<String, dynamic>? data) =>
      (super.noSuchMethod(
            Invocation.method(#saveConversation, [id, data]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  Map<String, dynamic>? getConversation(String? id) =>
      (super.noSuchMethod(Invocation.method(#getConversation, [id]))
          as Map<String, dynamic>?);

  @override
  List<Map<String, dynamic>> getAllConversations() =>
      (super.noSuchMethod(
            Invocation.method(#getAllConversations, []),
            returnValue: <Map<String, dynamic>>[],
          )
          as List<Map<String, dynamic>>);

  @override
  _i4.Future<void> deleteConversation(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteConversation, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> saveGroup(String? id, Map<String, dynamic>? data) =>
      (super.noSuchMethod(
            Invocation.method(#saveGroup, [id, data]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  Map<String, dynamic>? getGroup(String? id) =>
      (super.noSuchMethod(Invocation.method(#getGroup, [id]))
          as Map<String, dynamic>?);

  @override
  List<Map<String, dynamic>> getAllGroups() =>
      (super.noSuchMethod(
            Invocation.method(#getAllGroups, []),
            returnValue: <Map<String, dynamic>>[],
          )
          as List<Map<String, dynamic>>);

  @override
  _i4.Future<void> deleteGroup(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteGroup, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> savePromptTemplate(String? id, Map<String, dynamic>? data) =>
      (super.noSuchMethod(
            Invocation.method(#savePromptTemplate, [id, data]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  Map<String, dynamic>? getPromptTemplate(String? id) =>
      (super.noSuchMethod(Invocation.method(#getPromptTemplate, [id]))
          as Map<String, dynamic>?);

  @override
  List<Map<String, dynamic>> getAllPromptTemplates() =>
      (super.noSuchMethod(
            Invocation.method(#getAllPromptTemplates, []),
            returnValue: <Map<String, dynamic>>[],
          )
          as List<Map<String, dynamic>>);

  @override
  _i4.Future<void> deletePromptTemplate(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deletePromptTemplate, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> saveSetting(String? key, dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#saveSetting, [key, value]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  dynamic getSetting(String? key) =>
      super.noSuchMethod(Invocation.method(#getSetting, [key]));

  @override
  _i4.Future<void> deleteSetting(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSetting, [key]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> saveApiConfig(String? id, Map<String, dynamic>? data) =>
      (super.noSuchMethod(
            Invocation.method(#saveApiConfig, [id, data]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>?> getApiConfig(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getApiConfig, [id]),
            returnValue: _i4.Future<Map<String, dynamic>?>.value(),
          )
          as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getAllApiConfigs() =>
      (super.noSuchMethod(
            Invocation.method(#getAllApiConfigs, []),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<void> deleteApiConfig(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteApiConfig, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> saveAppSettings(Map<String, dynamic>? settings) =>
      (super.noSuchMethod(
            Invocation.method(#saveAppSettings, [settings]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>?> getAppSettings() =>
      (super.noSuchMethod(
            Invocation.method(#getAppSettings, []),
            returnValue: _i4.Future<Map<String, dynamic>?>.value(),
          )
          as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<void> saveModel(String? id, Map<String, dynamic>? data) =>
      (super.noSuchMethod(
            Invocation.method(#saveModel, [id, data]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> saveAllModels(List<Map<String, dynamic>>? models) =>
      (super.noSuchMethod(
            Invocation.method(#saveAllModels, [models]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  Map<String, dynamic>? getModel(String? id) =>
      (super.noSuchMethod(Invocation.method(#getModel, [id]))
          as Map<String, dynamic>?);

  @override
  List<Map<String, dynamic>> getAllModels() =>
      (super.noSuchMethod(
            Invocation.method(#getAllModels, []),
            returnValue: <Map<String, dynamic>>[],
          )
          as List<Map<String, dynamic>>);

  @override
  _i4.Future<void> deleteModel(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteModel, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> clearAllModels() =>
      (super.noSuchMethod(
            Invocation.method(#clearAllModels, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<List<String>> getAllKeys() =>
      (super.noSuchMethod(
            Invocation.method(#getAllKeys, []),
            returnValue: _i4.Future<List<String>>.value(<String>[]),
          )
          as _i4.Future<List<String>>);

  @override
  _i4.Future<void> clearAll() =>
      (super.noSuchMethod(
            Invocation.method(#clearAll, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [SettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsRepository extends _i1.Mock
    implements _i5.SettingsRepository {
  MockSettingsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ApiConfig> createApiConfig({
    required String? name,
    required String? provider,
    required String? baseUrl,
    required String? apiKey,
    String? organization,
    String? proxyUrl,
    String? proxyUsername,
    String? proxyPassword,
    String? defaultModel,
    double? temperature,
    int? maxTokens,
    double? topP,
    double? frequencyPenalty,
    double? presencePenalty,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createApiConfig, [], {
              #name: name,
              #provider: provider,
              #baseUrl: baseUrl,
              #apiKey: apiKey,
              #organization: organization,
              #proxyUrl: proxyUrl,
              #proxyUsername: proxyUsername,
              #proxyPassword: proxyPassword,
              #defaultModel: defaultModel,
              #temperature: temperature,
              #maxTokens: maxTokens,
              #topP: topP,
              #frequencyPenalty: frequencyPenalty,
              #presencePenalty: presencePenalty,
            }),
            returnValue: _i4.Future<_i2.ApiConfig>.value(
              _FakeApiConfig_0(
                this,
                Invocation.method(#createApiConfig, [], {
                  #name: name,
                  #provider: provider,
                  #baseUrl: baseUrl,
                  #apiKey: apiKey,
                  #organization: organization,
                  #proxyUrl: proxyUrl,
                  #proxyUsername: proxyUsername,
                  #proxyPassword: proxyPassword,
                  #defaultModel: defaultModel,
                  #temperature: temperature,
                  #maxTokens: maxTokens,
                  #topP: topP,
                  #frequencyPenalty: frequencyPenalty,
                  #presencePenalty: presencePenalty,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.ApiConfig>);

  @override
  _i4.Future<void> saveApiConfig(_i2.ApiConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#saveApiConfig, [config]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i2.ApiConfig?> getApiConfig(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getApiConfig, [id]),
            returnValue: _i4.Future<_i2.ApiConfig?>.value(),
          )
          as _i4.Future<_i2.ApiConfig?>);

  @override
  _i4.Future<List<_i2.ApiConfig>> getAllApiConfigs() =>
      (super.noSuchMethod(
            Invocation.method(#getAllApiConfigs, []),
            returnValue: _i4.Future<List<_i2.ApiConfig>>.value(
              <_i2.ApiConfig>[],
            ),
          )
          as _i4.Future<List<_i2.ApiConfig>>);

  @override
  _i4.Future<_i2.ApiConfig?> getActiveApiConfig() =>
      (super.noSuchMethod(
            Invocation.method(#getActiveApiConfig, []),
            returnValue: _i4.Future<_i2.ApiConfig?>.value(),
          )
          as _i4.Future<_i2.ApiConfig?>);

  @override
  _i4.Future<void> setActiveApiConfig(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#setActiveApiConfig, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteApiConfig(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteApiConfig, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateApiConfig(
    String? id, {
    required String? name,
    required String? provider,
    required String? baseUrl,
    required String? apiKey,
    String? organization,
    String? proxyUrl,
    String? proxyUsername,
    String? proxyPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateApiConfig,
              [id],
              {
                #name: name,
                #provider: provider,
                #baseUrl: baseUrl,
                #apiKey: apiKey,
                #organization: organization,
                #proxyUrl: proxyUrl,
                #proxyUsername: proxyUsername,
                #proxyPassword: proxyPassword,
              },
            ),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> saveSettings(_i2.AppSettings? settings) =>
      (super.noSuchMethod(
            Invocation.method(#saveSettings, [settings]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i2.AppSettings> getSettings() =>
      (super.noSuchMethod(
            Invocation.method(#getSettings, []),
            returnValue: _i4.Future<_i2.AppSettings>.value(
              _FakeAppSettings_1(this, Invocation.method(#getSettings, [])),
            ),
          )
          as _i4.Future<_i2.AppSettings>);
}
