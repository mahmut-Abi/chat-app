// Mocks generated by Mockito 5.4.6 from annotations
// in chat_app/test/unit/agent/agent_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:chat_app/features/agent/data/agent_repository.dart' as _i3;
import 'package:chat_app/features/agent/domain/agent_tool.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAgentConfig_0 extends _i1.SmartFake implements _i2.AgentConfig {
  _FakeAgentConfig_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAgentTool_1 extends _i1.SmartFake implements _i2.AgentTool {
  _FakeAgentTool_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeToolExecutionResult_2 extends _i1.SmartFake
    implements _i2.ToolExecutionResult {
  _FakeToolExecutionResult_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AgentRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAgentRepository extends _i1.Mock implements _i3.AgentRepository {
  MockAgentRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AgentConfig> createAgent({
    required String? name,
    String? description,
    required List<String>? toolIds,
    String? systemPrompt,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createAgent, [], {
              #name: name,
              #description: description,
              #toolIds: toolIds,
              #systemPrompt: systemPrompt,
            }),
            returnValue: _i4.Future<_i2.AgentConfig>.value(
              _FakeAgentConfig_0(
                this,
                Invocation.method(#createAgent, [], {
                  #name: name,
                  #description: description,
                  #toolIds: toolIds,
                  #systemPrompt: systemPrompt,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.AgentConfig>);

  @override
  _i4.Future<_i2.AgentTool> createTool({
    required String? name,
    required String? description,
    required _i2.AgentToolType? type,
    Map<String, dynamic>? parameters,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createTool, [], {
              #name: name,
              #description: description,
              #type: type,
              #parameters: parameters,
            }),
            returnValue: _i4.Future<_i2.AgentTool>.value(
              _FakeAgentTool_1(
                this,
                Invocation.method(#createTool, [], {
                  #name: name,
                  #description: description,
                  #type: type,
                  #parameters: parameters,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.AgentTool>);

  @override
  _i4.Future<_i2.ToolExecutionResult> executeTool(
    _i2.AgentTool? tool,
    Map<String, dynamic>? input,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#executeTool, [tool, input]),
            returnValue: _i4.Future<_i2.ToolExecutionResult>.value(
              _FakeToolExecutionResult_2(
                this,
                Invocation.method(#executeTool, [tool, input]),
              ),
            ),
          )
          as _i4.Future<_i2.ToolExecutionResult>);

  @override
  _i4.Future<List<_i2.AgentConfig>> getAllAgents() =>
      (super.noSuchMethod(
            Invocation.method(#getAllAgents, []),
            returnValue: _i4.Future<List<_i2.AgentConfig>>.value(
              <_i2.AgentConfig>[],
            ),
          )
          as _i4.Future<List<_i2.AgentConfig>>);

  @override
  _i4.Future<List<_i2.AgentTool>> getAllTools() =>
      (super.noSuchMethod(
            Invocation.method(#getAllTools, []),
            returnValue: _i4.Future<List<_i2.AgentTool>>.value(
              <_i2.AgentTool>[],
            ),
          )
          as _i4.Future<List<_i2.AgentTool>>);

  @override
  _i4.Future<void> updateAgent(_i2.AgentConfig? agent) =>
      (super.noSuchMethod(
            Invocation.method(#updateAgent, [agent]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> saveConfig(_i2.AgentConfig? agent) =>
      (super.noSuchMethod(
            Invocation.method(#saveConfig, [agent]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteAgent(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAgent, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateTool(_i2.AgentTool? tool) =>
      (super.noSuchMethod(
            Invocation.method(#updateTool, [tool]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateToolStatus(String? id, bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#updateToolStatus, [id, enabled]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteTool(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTool, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
