// Mocks generated by Mockito 5.4.6 from annotations
// in chat_app/test/unit/models_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:chat_app/core/network/openai_api_client.dart' as _i2;
import 'package:chat_app/features/chat/domain/message.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiTestResult_0 extends _i1.SmartFake implements _i2.ApiTestResult {
  _FakeApiTestResult_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeChatCompletionResponse_1 extends _i1.SmartFake
    implements _i3.ChatCompletionResponse {
  _FakeChatCompletionResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [OpenAIApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenAIApiClient extends _i1.Mock implements _i2.OpenAIApiClient {
  MockOpenAIApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ApiTestResult> testConnection() =>
      (super.noSuchMethod(
            Invocation.method(#testConnection, []),
            returnValue: _i4.Future<_i2.ApiTestResult>.value(
              _FakeApiTestResult_0(
                this,
                Invocation.method(#testConnection, []),
              ),
            ),
          )
          as _i4.Future<_i2.ApiTestResult>);

  @override
  _i4.Future<_i3.ChatCompletionResponse> createChatCompletion(
    _i3.ChatCompletionRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createChatCompletion, [request]),
            returnValue: _i4.Future<_i3.ChatCompletionResponse>.value(
              _FakeChatCompletionResponse_1(
                this,
                Invocation.method(#createChatCompletion, [request]),
              ),
            ),
          )
          as _i4.Future<_i3.ChatCompletionResponse>);

  @override
  _i4.Stream<String> createChatCompletionStream(
    _i3.ChatCompletionRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createChatCompletionStream, [request]),
            returnValue: _i4.Stream<String>.empty(),
          )
          as _i4.Stream<String>);

  @override
  _i4.Future<List<String>> getAvailableModels() =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableModels, []),
            returnValue: _i4.Future<List<String>>.value(<String>[]),
          )
          as _i4.Future<List<String>>);
}
