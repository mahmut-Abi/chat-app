// Mocks generated by Mockito 5.4.6 from annotations
// in chat_app/test/features/chat/presentation/chat_screen_scroll_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:chat_app/features/chat/data/chat_repository.dart' as _i4;
import 'package:chat_app/features/chat/domain/conversation.dart' as _i3;
import 'package:chat_app/features/chat/domain/message.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMessage_0 extends _i1.SmartFake implements _i2.Message {
  _FakeMessage_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConversation_1 extends _i1.SmartFake implements _i3.Conversation {
  _FakeConversation_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConversationGroup_2 extends _i1.SmartFake
    implements _i3.ConversationGroup {
  _FakeConversationGroup_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ChatRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatRepository extends _i1.Mock implements _i4.ChatRepository {
  MockChatRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Message> sendMessage({
    required String? conversationId,
    required String? content,
    required _i3.ModelConfig? config,
    List<_i2.Message>? conversationHistory,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendMessage, [], {
              #conversationId: conversationId,
              #content: content,
              #config: config,
              #conversationHistory: conversationHistory,
            }),
            returnValue: _i5.Future<_i2.Message>.value(
              _FakeMessage_0(
                this,
                Invocation.method(#sendMessage, [], {
                  #conversationId: conversationId,
                  #content: content,
                  #config: config,
                  #conversationHistory: conversationHistory,
                }),
              ),
            ),
          )
          as _i5.Future<_i2.Message>);

  @override
  _i5.Stream<String> sendMessageStream({
    required String? conversationId,
    required String? content,
    required _i3.ModelConfig? config,
    List<_i2.Message>? conversationHistory,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendMessageStream, [], {
              #conversationId: conversationId,
              #content: content,
              #config: config,
              #conversationHistory: conversationHistory,
            }),
            returnValue: _i5.Stream<String>.empty(),
          )
          as _i5.Stream<String>);

  @override
  _i5.Future<_i3.Conversation> createConversation({
    String? title,
    String? systemPrompt,
    List<String>? tags,
    String? groupId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createConversation, [], {
              #title: title,
              #systemPrompt: systemPrompt,
              #tags: tags,
              #groupId: groupId,
            }),
            returnValue: _i5.Future<_i3.Conversation>.value(
              _FakeConversation_1(
                this,
                Invocation.method(#createConversation, [], {
                  #title: title,
                  #systemPrompt: systemPrompt,
                  #tags: tags,
                  #groupId: groupId,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.Conversation>);

  @override
  _i5.Future<void> saveConversation(_i3.Conversation? conversation) =>
      (super.noSuchMethod(
            Invocation.method(#saveConversation, [conversation]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i3.Conversation? getConversation(String? id) =>
      (super.noSuchMethod(Invocation.method(#getConversation, [id]))
          as _i3.Conversation?);

  @override
  List<_i3.Conversation> getAllConversations() =>
      (super.noSuchMethod(
            Invocation.method(#getAllConversations, []),
            returnValue: <_i3.Conversation>[],
          )
          as List<_i3.Conversation>);

  @override
  _i5.Future<void> deleteConversation(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteConversation, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateConversationTitle(String? id, String? title) =>
      (super.noSuchMethod(
            Invocation.method(#updateConversationTitle, [id, title]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> addTagToConversation(String? id, String? tag) =>
      (super.noSuchMethod(
            Invocation.method(#addTagToConversation, [id, tag]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeTagFromConversation(String? id, String? tag) =>
      (super.noSuchMethod(
            Invocation.method(#removeTagFromConversation, [id, tag]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setConversationGroup(String? id, String? groupId) =>
      (super.noSuchMethod(
            Invocation.method(#setConversationGroup, [id, groupId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  List<_i3.Conversation> getConversationsByTag(String? tag) =>
      (super.noSuchMethod(
            Invocation.method(#getConversationsByTag, [tag]),
            returnValue: <_i3.Conversation>[],
          )
          as List<_i3.Conversation>);

  @override
  List<_i3.Conversation> getConversationsByGroup(String? groupId) =>
      (super.noSuchMethod(
            Invocation.method(#getConversationsByGroup, [groupId]),
            returnValue: <_i3.Conversation>[],
          )
          as List<_i3.Conversation>);

  @override
  String exportToMarkdown(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#exportToMarkdown, [id]),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.method(#exportToMarkdown, [id]),
            ),
          )
          as String);

  @override
  String exportAllToMarkdown() =>
      (super.noSuchMethod(
            Invocation.method(#exportAllToMarkdown, []),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.method(#exportAllToMarkdown, []),
            ),
          )
          as String);

  @override
  _i5.Future<_i3.ConversationGroup> createGroup({
    required String? name,
    String? color,
    int? sortOrder,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createGroup, [], {
              #name: name,
              #color: color,
              #sortOrder: sortOrder,
            }),
            returnValue: _i5.Future<_i3.ConversationGroup>.value(
              _FakeConversationGroup_2(
                this,
                Invocation.method(#createGroup, [], {
                  #name: name,
                  #color: color,
                  #sortOrder: sortOrder,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.ConversationGroup>);

  @override
  _i3.ConversationGroup? getGroup(String? id) =>
      (super.noSuchMethod(Invocation.method(#getGroup, [id]))
          as _i3.ConversationGroup?);

  @override
  List<_i3.ConversationGroup> getAllGroups() =>
      (super.noSuchMethod(
            Invocation.method(#getAllGroups, []),
            returnValue: <_i3.ConversationGroup>[],
          )
          as List<_i3.ConversationGroup>);

  @override
  _i5.Future<void> updateGroup(_i3.ConversationGroup? group) =>
      (super.noSuchMethod(
            Invocation.method(#updateGroup, [group]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteGroup(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteGroup, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  List<String> getAllTags() =>
      (super.noSuchMethod(
            Invocation.method(#getAllTags, []),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  _i5.Future<void> generateConversationTitle(String? conversationId) =>
      (super.noSuchMethod(
            Invocation.method(#generateConversationTitle, [conversationId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> togglePinConversation(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#togglePinConversation, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  List<_i3.Conversation> getSortedConversations() =>
      (super.noSuchMethod(
            Invocation.method(#getSortedConversations, []),
            returnValue: <_i3.Conversation>[],
          )
          as List<_i3.Conversation>);
}
