#!/bin/sh
#
# Git pre-commit hook for Flutter projects
# Runs flutter analyze and only blocks on errors (not warnings or info)
#

echo "üîç Running Flutter analyze..."
echo ""

# Run flutter analyze and capture output
ANALYZE_OUTPUT=$(flutter analyze --no-pub 2>&1)
ANALYZE_EXIT_CODE=$?

# Display the output
echo "$ANALYZE_OUTPUT"
echo ""

# Check if there are any actual errors (not just warnings or info)
if echo "$ANALYZE_OUTPUT" | grep -q '^  error ‚Ä¢'; then
    echo "‚ùå Flutter analyze found errors!"
    echo "Please fix the errors before committing."
    echo "(warnings and info messages are allowed)"
    echo ""
    exit 1
fi

# Show summary
ERROR_COUNT=$(echo "$ANALYZE_OUTPUT" | grep -c '^  error ‚Ä¢' || true)
WARNING_COUNT=$(echo "$ANALYZE_OUTPUT" | grep -c '^warning ‚Ä¢' || true)
INFO_COUNT=$(echo "$ANALYZE_OUTPUT" | grep -c '^   info ‚Ä¢' || true)

if [ $ERROR_COUNT -eq 0 ]; then
    echo "‚úÖ Flutter analyze passed!"
    if [ $WARNING_COUNT -gt 0 ] || [ $INFO_COUNT -gt 0 ]; then
        echo "   Found $WARNING_COUNT warning(s) and $INFO_COUNT info message(s)"
        echo "   (These won't block the commit)"
    fi
    echo ""
    exit 0
else
    echo "‚ùå Found $ERROR_COUNT error(s)"
    echo ""
    exit 1
fi
